<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Michael is coding - Python explained</title><link>https://michaeliscoding.com/</link><description>Learn to write fast, beautiful and efficient code. Understand programming concepts and technologies. Advance your career by learning how to deal with people.</description><lastBuildDate>Thu, 09 Jun 2022 00:00:00 +0200</lastBuildDate><item><title>What are dunder methods in Python?</title><link>https://michaeliscoding.com/what-are-dunder-methods-python/</link><description>&lt;p&gt;Dunder methods are methods with special meaning in Python. We look into what they are and why they're called the whey they are.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael</dc:creator><pubDate>Thu, 09 Jun 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:michaeliscoding.com,2022-06-09:/what-are-dunder-methods-python/</guid><category>Python explained</category><category>python</category><category>dunder</category><category>method</category><category>__init__</category><category>__repr__</category><category>repr()</category></item><item><title>What is an iterator in Python</title><link>https://michaeliscoding.com/what-is-an-iterator-in-python/</link><description>&lt;p&gt;The iterator is one of the core objects in Python. Understanding iterators is crucial to mastering Python. We'll look at how iterators work, and we'll also create our own iterators.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael</dc:creator><pubDate>Wed, 27 Oct 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:michaeliscoding.com,2021-10-27:/what-is-an-iterator-in-python/</guid><category>Python explained</category><category>python</category><category>iterable</category><category>list</category><category>set</category><category>dict</category><category>file</category><category>iterator</category><category>generator</category></item><item><title>What is an iterable in Python</title><link>https://michaeliscoding.com/what-is-an-iterable-in-python/</link><description>&lt;p&gt;Iterable is a ubiquitous concept in Python. What exactly makes an object iterable, and which built-in objects are iterables? We'll also create our own iterables.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael</dc:creator><pubDate>Tue, 19 Oct 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:michaeliscoding.com,2021-10-19:/what-is-an-iterable-in-python/</guid><category>Python explained</category><category>python</category><category>iterable</category><category>list</category><category>set</category><category>dict</category><category>file</category><category>iterator</category><category>generator</category><category>__iter__()</category><category>iter()</category></item><item><title>Lists are arrays in Python</title><link>https://michaeliscoding.com/lists-are-arrays-in-python/</link><description>&lt;p&gt;Lists in Python are actually arrays - with all the consequences.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael</dc:creator><pubDate>Tue, 12 Oct 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:michaeliscoding.com,2021-10-12:/lists-are-arrays-in-python/</guid><category>Python explained</category><category>python</category><category>list</category><category>array</category></item><item><title>Tuple comprehensions in Python</title><link>https://michaeliscoding.com/tuple-comprehensions-in-python/</link><description>&lt;p&gt;Python does not have tuple comprehensions. But there is a way.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael</dc:creator><pubDate>Thu, 07 Oct 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:michaeliscoding.com,2021-10-07:/tuple-comprehensions-in-python/</guid><category>Python explained</category><category>python</category><category>tuple</category><category>comprehension</category></item><item><title>How nested comprehensions work in Python</title><link>https://michaeliscoding.com/how-nested-comprehensions-work-in-python/</link><description>&lt;p&gt;We can nest comprehensions the same way as we can nest for loops. In this article, we explain how it works.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael</dc:creator><pubDate>Tue, 05 Oct 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:michaeliscoding.com,2021-10-05:/how-nested-comprehensions-work-in-python/</guid><category>Python explained</category><category>python</category><category>comprehension</category><category>nested comprehensions</category></item><item><title>How to use dict comprehensions in Python</title><link>https://michaeliscoding.com/how-to-use-dict-comprehensions-in-python/</link><description>&lt;p&gt;What are dict comprehensions? How do they differ from list comprehensions, and when are they useful.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael</dc:creator><pubDate>Fri, 01 Oct 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:michaeliscoding.com,2021-10-01:/how-to-use-dict-comprehensions-in-python/</guid><category>Python explained</category><category>python</category><category>dict</category><category>comprehension</category><category>dict comprehension</category></item><item><title>How to use set comprehensions in Python</title><link>https://michaeliscoding.com/how-to-use-set-comprehensions-in-python/</link><description>&lt;p&gt;What are set comprehensions? How do they differ from list comprehensions, and when are they useful.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael</dc:creator><pubDate>Tue, 28 Sep 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:michaeliscoding.com,2021-09-28:/how-to-use-set-comprehensions-in-python/</guid><category>Python explained</category><category>python</category><category>set</category><category>comprehension</category><category>set comprehension</category></item><item><title>Why should we use comprehensions in Python?</title><link>https://michaeliscoding.com/why-should-we-use-comprehensions-in-python/</link><description>&lt;p&gt;There are at least three good reasons why we should use comprehensions in Python. Let's see what they are.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael</dc:creator><pubDate>Thu, 23 Sep 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:michaeliscoding.com,2021-09-23:/why-should-we-use-comprehensions-in-python/</guid><category>Python explained</category><category>python</category><category>list</category><category>comprehension</category></item><item><title>How do list comprehensions work in Python</title><link>https://michaeliscoding.com/how-do-list-comprehensions-work-in-python/</link><description>&lt;p&gt;A detailed explanation of how list comprehensions work in Python. What's their purpose. When to use them and when not to.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael</dc:creator><pubDate>Tue, 21 Sep 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:michaeliscoding.com,2021-09-21:/how-do-list-comprehensions-work-in-python/</guid><category>Python explained</category><category>python</category><category>list</category><category>comprehension</category></item><item><title>About bool in Python</title><link>https://michaeliscoding.com/about-bool-in-python/</link><description>&lt;p&gt;True+1+True=3. What bool values really are in Python.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael</dc:creator><pubDate>Thu, 02 Sep 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:michaeliscoding.com,2021-09-02:/about-bool-in-python/</guid><category>Python explained</category><category>python</category><category>bool</category><category>True</category><category>False</category><category>int</category><category>numbers</category></item><item><title>Difference between sorted() and .sort() in Python</title><link>https://michaeliscoding.com/difference-between-sort-and-sorted-in-python/</link><description>&lt;p&gt;Why is the sort() used like my_list.sort() but sorted() is used as sorted(my_list)? What is the key difference between them?&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael</dc:creator><pubDate>Tue, 31 Aug 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:michaeliscoding.com,2021-08-31:/difference-between-sort-and-sorted-in-python/</guid><category>Python explained</category><category>python</category><category>sort</category><category>sorted</category><category>list</category><category>sorting</category><category>iterable</category></item><item><title>Why Python</title><link>https://michaeliscoding.com/why-python/</link><description>&lt;p&gt;Python is a great programming language to learn and use. We look at its benefits and why it might be the best-balanced language in beauty, usefulness and practicality.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael</dc:creator><pubDate>Wed, 04 Aug 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:michaeliscoding.com,2021-08-04:/why-python/</guid><category>Python explained</category><category>python</category></item></channel></rss>